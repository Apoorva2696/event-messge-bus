[{"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\index.js":"1","C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\App.js":"2","C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\reportWebVitals.js":"3","C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Pages\\index.js":"4","C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Pages\\Home.jsx":"5","C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Modules\\MessageBus.js":"6"},{"size":517,"mtime":1611506882020,"results":"7","hashOfConfig":"8"},{"size":177,"mtime":1611639471360,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611506882042,"results":"10","hashOfConfig":"8"},{"size":29,"mtime":1611639455677,"results":"11","hashOfConfig":"8"},{"size":623,"mtime":1611824259490,"results":"12","hashOfConfig":"8"},{"size":4395,"mtime":1611506882013,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5l2a0c",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\index.js",[],["28","29"],"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\App.js",[],"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\reportWebVitals.js",[],"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Pages\\index.js",[],"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Pages\\Home.jsx",["30"],"C:\\Users\\aposriva1\\Desktop\\projects\\event-messge-bus\\src\\Modules\\MessageBus.js",["31"],"/* eslint-disable no-prototype-builtins */\r\n\r\nimport shortid from 'shortid';\r\n\r\n/**\r\n * @typedef {object} MessageBus\r\n * @desc A custom pub-sub application for general use case based on events.\r\n * @property {function(eventName: string), payload: object} trigger - Trigger an event with payload\r\n * @property {function(eventName: string), methodToCall, thisBinding} on - Subscribe to an event\r\n * @property {function(eventName: string), methodToCall, thisBinding} on - Unsubscribe from an event\r\n * @example\r\n * import { MessageBus } from 'modules/MessageBus';\r\n *\r\n * MessageBus.on( 'SOME_EVENT', this.logMessages, this );\r\n * MessageBus.trigger( 'SOME_EVENT', 'SOME_MESSAGE' );\r\n *\r\n * // unsubscribe\r\n * MessageBus.off( 'SOME_EVENT', this.logMessages, this );\r\n */\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport const MessageBus = ( () => {\r\n\r\n        const _events = {}; //To store all events.\r\n\r\n        /**\r\n         * Adds handler to the subscriber list for a particular event.\r\n         * @param event\r\n         * @param callback\r\n         * @param callbackObj\r\n         * @private\r\n         */\r\n        const _on = function ( event, callback, callbackObj ) {\r\n            if ( false === _events.hasOwnProperty( event ) ) {\r\n                _events[ event ] = [];\r\n            }\r\n            _events[ event ].push( { callback: callback, callbackObj: callbackObj } );\r\n        };\r\n\r\n        /**\r\n         * Removes handler from the subscriber list for a particular event.\r\n         * @param event\r\n         * @param callback\r\n         * @param callbackObj\r\n         * @private\r\n         */\r\n        const _off = function ( event, callback, callbackObj ) {\r\n            let eventCount,\r\n                currentEvent,\r\n                ctr;\r\n            if ( true === _events.hasOwnProperty( event ) ) {\r\n                currentEvent = _events[ event ];\r\n                eventCount = currentEvent.length;\r\n                for ( ctr = 0; ctr < eventCount; ctr = ctr + 1 ) {\r\n                    if ( callback === currentEvent[ ctr ].callback && callbackObj === currentEvent[ ctr ].callbackObj ) {\r\n                        currentEvent.splice( ctr, 1 );\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Publishes an event with given payload.\r\n         * @param event\r\n         * @param payload\r\n         * @private\r\n         */\r\n        const _trigger = function( event, payload ) {\r\n            log.tag( 'MESSAGE_BUS' ).debug( `trigger:${ event }` );\r\n\r\n            let eventCount,\r\n                currentEvent,\r\n                ctr;\r\n            if ( true === _events.hasOwnProperty( event ) ) {\r\n                currentEvent = _events[ event ];\r\n                eventCount = currentEvent.length;\r\n                for ( ctr = 0; ctr < eventCount; ctr = ctr + 1 ) {\r\n                    if( 'undefined' === typeof currentEvent[ ctr ].callbackObj ) {\r\n                        if ( 'function' === typeof currentEvent[ ctr ].callback ) {\r\n                            currentEvent[ ctr ].callback( payload );\r\n                        }\r\n                    } else {\r\n                        if ( 'function' === typeof currentEvent[ ctr ].callback ) {\r\n                            currentEvent[ ctr ].callback.call( currentEvent[ ctr ].callbackObj, payload );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n        * Exposes the following methods.\r\n        */\r\n        return {\r\n            on: _on,\r\n            off: _off,\r\n            trigger: _trigger\r\n        };\r\n    }\r\n)();\r\n\r\n\r\n/**\r\n * @desc Get an event emitter which only triggers and listens to one event.\r\n * @example\r\n * import { getEmitter } from 'modules/MessageBus';\r\n *\r\n * const messageBus = getEmitter();\r\n *\r\n * messageBus.trigger();\r\n * messageBus.on( callback, thisObject );\r\n * messageBus.off( callback, thisObject );\r\n *\r\n * @returns {object} - an instance of MessageBus\r\n */\r\nexport const getEmitter = ( eventName = shortid.generate() ) => {\r\n\r\n    return {\r\n        on: ( ...params ) => {\r\n            return MessageBus.on( eventName, ...params );\r\n        },\r\n        off: ( ...params ) => {\r\n            return MessageBus.off( eventName, ...params );\r\n        },\r\n        trigger: ( ...params ) => {\r\n            return MessageBus.trigger( eventName, ...params );\r\n        }\r\n    };\r\n};\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":2,"message":"37","line":8,"column":45,"nodeType":"38","messageId":"39","endLine":8,"endColumn":57},{"ruleId":"36","severity":2,"message":"40","line":73,"column":13,"nodeType":"38","messageId":"39","endLine":73,"endColumn":16},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-undef","'eventHandler' is not defined.","Identifier","undef","'log' is not defined.","no-global-assign","no-unsafe-negation"]